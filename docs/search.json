[{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"brief-explanation","dir":"Articles","previous_headings":"","what":"Brief explanation","title":"Introduction to Rseries","text":"can select 3 palette families moment: palette_netflyx, palette_anime,palette_peru. family list palette series. palette package total 6 colors. brief total list palettes avaliable per family :    function serie_palette can select palette specific family following entry: serie_palette( enter name, palette preference, palette family ,number colors, type discrete continous ) Let’s see examples using ggplot2 based R Graph Gallery examples.","code":""},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"libraries","dir":"Articles","previous_headings":"","what":"Libraries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)"},{"path":[]},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-time-series","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"Lupin\", palette_family = palette_netflyx) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"a-classic-boxplot","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# create a dataset data <- data.frame(   name=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_rseries(palette_family = palette_netflyx, palette = \"Lupin\") +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\" \")"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-density-charts","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+       scale_fill_rseries(palette_family = palette_netflyx, palette = \"Lupin\") +   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +         scale_fill_rseries(palette_family = palette_netflyx, palette = \"Lupin\") +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-data-art","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"Lupin\", palette_netflyx, 12) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":[]},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-time-series-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"poputepik\", palette_family = palette_anime) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"a-classic-boxplot-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # create a dataset data <- data.frame(   name=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot pal=serie_palette(\"poputepik\", palette_anime, 5)  data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_manual(values=(pal)) +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\"\")"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-density-charts-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  pal=serie_palette(\"poputepik\", palette_anime, 5)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+   scale_fill_manual(values=(pal))+   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +     scale_fill_manual(values=(pal)) +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-data-art-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"poputepik\", palette_anime, 6) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-time-series-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"tokyorev\", palette_family = palette_anime) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"a-classic-boxplot-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # create a dataset data <- data.frame(   name=c( rep(\"Shibuya\",500), rep(\"Shinjuku\",500), rep(\"Yokohama\",500), rep(\"Umishita Park\",20), rep('Musashi Shrine', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot pal=serie_palette(\"tokyorev\", palette_anime, 5)  data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_manual(values=(pal)) +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\"\")"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-density-charts-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  pal=serie_palette(\"tokyorev\", palette_anime, 5)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+   scale_fill_manual(values=(pal))+   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +     scale_fill_manual(values=(pal)) +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-data-art-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"tokyorev\", palette_anime, 6) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-time-series-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"yona\", palette_family = palette_anime) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"a-classic-boxplot-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # create a dataset data <- data.frame(   name=c( rep(\"Kouka Kingdom\",500), rep(\"Wind Tribe\",500), rep(\"Water Tribe\",500), rep(\"Fire Tribe\",20), rep('Kai Empire', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot pal=serie_palette(\"yona\", palette_anime, 5)  data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_manual(values=(pal)) +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\"\")"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-density-charts-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  pal=serie_palette(\"yona\", palette_anime, 5)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+   scale_fill_manual(values=(pal))+   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +     scale_fill_manual(values=(pal)) +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"some-data-art-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"yona\", palette_anime, 6) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":"https://diognes.github.io/Rseries/articles/Introduction_to_R_series.html","id":"functions-for-fill-and-color-aesthetics","dir":"Articles","previous_headings":"","what":"Functions for fill and color aesthetics","title":"Introduction to Rseries","text":"","code":"diamonds %>%    ggplot(aes(x = cut, fill = clarity)) +   geom_bar() +   scale_fill_rseries()+   theme_bw() +   ggtitle('scale_fill_rseries()') EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot()+   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"tokyorev\",                       palette_family = palette_anime)  +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/palette_samples.html","id":"a-showcase-of-some-palettes","dir":"Articles","previous_headings":"","what":"A showcase of some palettes","title":"Palettes in R series","text":"Rseries contains beauty palettes personalize plots style series plataforms like Netflyx, Crunchyroll(Anime) local TV Latin American Countries like Peru. total list palettes :","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"brief-explanation","dir":"Articles","previous_headings":"","what":"Brief explanation","title":"Introduction to Rseries","text":"can select two palette families moment: palette_netflyx palette_anime. family list palette series. palette package total 6 colors. function serie_palette can select palette following entry: serie_palette( enter name, palette preference, number colors, type discrete continous ) Let’s see examples using ggplot2 based R Graph Gallery examples.","code":""},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"libraries","dir":"Articles","previous_headings":"","what":"Libraries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)"},{"path":[]},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-time-series","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"Lupin\", palette_family = palette_netflyx) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"a-classic-boxplot","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# create a dataset data <- data.frame(   name=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_rseries(palette_family = palette_netflyx, palette = \"Lupin\") +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\" \")"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-density-charts","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+       scale_fill_rseries(palette_family = palette_netflyx, palette = \"Lupin\") +   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +         scale_fill_rseries(palette_family = palette_netflyx, palette = \"Lupin\") +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-data-art","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"Lupin\", palette_netflyx, 12) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":[]},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-time-series-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"poputepik\", palette_family = palette_anime) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"a-classic-boxplot-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # create a dataset data <- data.frame(   name=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot pal=serie_palette(\"poputepik\", palette_anime, 5)  data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_manual(values=(pal)) +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\"\")"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-density-charts-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  pal=serie_palette(\"poputepik\", palette_anime, 5)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+   scale_fill_manual(values=(pal))+   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +     scale_fill_manual(values=(pal)) +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-data-art-1","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"poputepik\", palette_anime, 6) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-time-series-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"tokyorev\", palette_family = palette_anime) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"a-classic-boxplot-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # create a dataset data <- data.frame(   name=c( rep(\"Shibuya\",500), rep(\"Shinjuku\",500), rep(\"Yokohama\",500), rep(\"Umishita Park\",20), rep('Musashi Shrine', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot pal=serie_palette(\"tokyorev\", palette_anime, 5)  data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_manual(values=(pal)) +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\"\")"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-density-charts-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  pal=serie_palette(\"tokyorev\", palette_anime, 5)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+   scale_fill_manual(values=(pal))+   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +     scale_fill_manual(values=(pal)) +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-data-art-2","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"tokyorev\", palette_anime, 6) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":[]},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-time-series-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot() +   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"yona\", palette_family = palette_anime) +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"a-classic-boxplot-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  # create a dataset data <- data.frame(   name=c( rep(\"Kouka Kingdom\",500), rep(\"Wind Tribe\",500), rep(\"Water Tribe\",500), rep(\"Fire Tribe\",20), rep('Kai Empire', 100)),   value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) ) )  # Plot pal=serie_palette(\"yona\", palette_anime, 5)  data %>%   ggplot( aes(x=name, y=value, fill=name)) +     geom_boxplot() +     scale_fill_manual(values=(pal)) +     theme_classic() +     theme(       legend.position=\"none\",       plot.title = element_text(size=11)     ) +     ggtitle(\"A classic boxplot\") +     xlab(\"\")"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-density-charts-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(tidyverse) library(ggplot2) library(Rseries)  pal=serie_palette(\"yona\", palette_anime, 5)  # Using the diamods dataset we can some of the palettes in our package.  # Multi density chart p1 <- ggplot(diamonds, aes(x=price,fill=cut))+   geom_density(position='stack')+   scale_fill_manual(values=(pal))+   theme_minimal() p1 # Stacked density plot p2 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +     geom_density(adjust=1.5, position=\"fill\") +     scale_fill_manual(values=(pal)) +     theme_minimal() p2"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"some-data-art-3","dir":"Articles","previous_headings":"","what":"Introduction to Rseries","title":"Introduction to Rseries","text":"","code":"# Libraries library(ggplot2) library(RColorBrewer)  # create a dataset set.seed(345) ngroup=30 names=paste(\"G_\",seq(1,ngroup),sep=\"\") DAT=data.frame()  for(i in seq(1:30)){   data=data.frame( matrix(0, ngroup , 3))   data[,1]=i   data[,2]=sample(names, nrow(data))   data[,3]=prop.table(sample( c(rep(0,113),c(1:ngroup)) ,nrow(data)))   DAT=rbind(DAT,data) } colnames(DAT)=c(\"Year\",\"Group\",\"Value\") DAT=DAT[order( DAT$Year, DAT$Group) , ]  # plot pal = serie_palette(\"yona\", palette_anime, 6) pal = colorRampPalette(pal)(ngroup) pal=pal[sample(c(1:length(pal)) , size=length(pal) ) ]  ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +    geom_area(alpha=1)+   theme_bw() +   scale_fill_manual(values = pal)+   theme(     text = element_blank(),     line = element_blank(),     title = element_blank(),     legend.position=\"none\",     panel.border = element_blank(),     panel.background = element_blank())"},{"path":"https://diognes.github.io/Rseries/articles/simple_examples.html","id":"functions-for-fill-and-color-aesthetics","dir":"Articles","previous_headings":"","what":"Functions for fill and color aesthetics","title":"Introduction to Rseries","text":"","code":"diamonds %>%    ggplot(aes(x = cut, fill = clarity)) +   geom_bar() +   scale_fill_rseries()+   theme_bw() +   ggtitle('scale_fill_rseries()') EuStockMarkets %>%   as.data.frame() %>%   gather(index, price) %>%   mutate(time = rep(time(EuStockMarkets), 4)) %>%    ggplot()+   geom_line(aes(color = index,x=time,y=price), size = 1) +   scale_color_rseries(palette = \"poke\",palette_family = palette_anime)  +   theme_minimal()"},{"path":"https://diognes.github.io/Rseries/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jesus Quispe-Quispe. Author. Rodrigo Norabuena Mascaraqui. Author. Giancarlo Liñan Cuenca. Author.","code":""},{"path":"https://diognes.github.io/Rseries/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quispe-Quispe J, Norabuena Mascaraqui R, LiÃ±Cuenca G (2022). Rseries: Package customize ggplots palette based series anime. https://github.com/diognes/Rseries, https://diognes.github.io/Rseries/.","code":"@Manual{,   title = {Rseries: Package for customize ggplots with palette based from series and anime},   author = {Jesus Quispe-Quispe and Rodrigo {Norabuena Mascaraqui} and Giancarlo {Liñan Cuenca}},   year = {2022},   note = {https://github.com/diognes/Rseries, https://diognes.github.io/Rseries/}, }"},{"path":[]},{"path":"https://diognes.github.io/Rseries/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Package for customize ggplots with palette based from series and anime","text":"package contains beauty palettes personalize plots style series plataforms like Netflyx, Amazon Prime local TV Latin American Countries","code":""},{"path":"https://diognes.github.io/Rseries/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package installation","title":"Package for customize ggplots with palette based from series and anime","text":"can install first version Rseries GitHub: following code just copy paste R console:","code":"if(!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"Diognes/Rseries\") library(Rseries)"},{"path":"https://diognes.github.io/Rseries/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"TERMS CONDITIONS USE, REPRODUCTION, DISTRIBUTION Definitions. “License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work. Grant Copyright License. Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form. Grant Patent License. Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed. Redistribution. may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: must give recipients Work Derivative Works copy License; must cause modified files carry prominent notices stating changed files; must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License. Submission Contributions. Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions. Trademarks. License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file. Disclaimer Warranty. Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License. Limitation Liability. event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages. Accepting Warranty Additional Liability. redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS APPENDIX: apply Apache License work. Copyright [yyyy] [name copyright owner] Licensed Apache License, Version 2.0 (“License”); may use file except compliance License. may obtain copy License Unless required applicable law agreed writing, software distributed License distributed “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied. See License specific language governing permissions limitations License.","code":"Version 2.0, January 2004                     http://www.apache.org/licenses/ To apply the Apache License to your work, attach the following   boilerplate notice, with the fields enclosed by brackets \"[]\"   replaced with your own identifying information. (Don't include   the brackets!)  The text should be enclosed in the appropriate   comment syntax for the file format. We also recommend that a   file or class name and description of purpose be included on the   same \"printed page\" as the copyright notice for easier   identification within third-party archives. http://www.apache.org/licenses/LICENSE-2.0"},{"path":"https://diognes.github.io/Rseries/reference/palette_anime.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of palettes — palette_anime","title":"Complete list of palettes — palette_anime","text":"Use names(palette_anime) view list palette anime names.","code":""},{"path":"https://diognes.github.io/Rseries/reference/palette_anime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of palettes — palette_anime","text":"","code":"palette_anime"},{"path":"https://diognes.github.io/Rseries/reference/palette_anime.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of palettes — palette_anime","text":"object class list length 23.","code":""},{"path":"https://diognes.github.io/Rseries/reference/palette_netflyx.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of palettes — palette_netflyx","title":"Complete list of palettes — palette_netflyx","text":"Use names(palette_netflyx) view list palette netflyx names.","code":""},{"path":"https://diognes.github.io/Rseries/reference/palette_netflyx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of palettes — palette_netflyx","text":"","code":"palette_netflyx"},{"path":"https://diognes.github.io/Rseries/reference/palette_netflyx.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of palettes — palette_netflyx","text":"object class list length 8.","code":""},{"path":"https://diognes.github.io/Rseries/reference/palette_peru.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of palettes — palette_peru","title":"Complete list of palettes — palette_peru","text":"Use names(palette_peru) view list palette netflyx names.","code":""},{"path":"https://diognes.github.io/Rseries/reference/palette_peru.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of palettes — palette_peru","text":"","code":"palette_peru"},{"path":"https://diognes.github.io/Rseries/reference/palette_peru.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of palettes — palette_peru","text":"object class list length 8.","code":""},{"path":"https://diognes.github.io/Rseries/reference/Rseries_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"palette color interpolate — Rseries_pal","title":"palette color interpolate — Rseries_pal","text":"palette color interpolate","code":""},{"path":"https://diognes.github.io/Rseries/reference/Rseries_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"palette color interpolate — Rseries_pal","text":"","code":"Rseries_pal(   palette = \"Lupin\",   palette_family = palette_netflyx,   reverse = FALSE,   ... )"},{"path":"https://diognes.github.io/Rseries/reference/scale_color_rseries.html","id":null,"dir":"Reference","previous_headings":"","what":"function to personalize color aesthetic — scale_color_rseries","title":"function to personalize color aesthetic — scale_color_rseries","text":"function personalize color aesthetic","code":""},{"path":"https://diognes.github.io/Rseries/reference/scale_color_rseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to personalize color aesthetic — scale_color_rseries","text":"","code":"scale_color_rseries(   palette_family = palette_netflyx,   palette = \"Lupin\",   discrete = TRUE,   reverse = FALSE,   ... )"},{"path":"https://diognes.github.io/Rseries/reference/scale_fill_rseries.html","id":null,"dir":"Reference","previous_headings":"","what":"function to personalize fill aesthetic — scale_fill_rseries","title":"function to personalize fill aesthetic — scale_fill_rseries","text":"function personalize fill aesthetic","code":""},{"path":"https://diognes.github.io/Rseries/reference/scale_fill_rseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to personalize fill aesthetic — scale_fill_rseries","text":"","code":"scale_fill_rseries(   palette_family = palette_netflyx,   palette = \"Lupin\",   discrete = TRUE,   reverse = FALSE,   ... )"},{"path":"https://diognes.github.io/Rseries/reference/serie_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Series Palette Generator. — serie_palette","title":"Series Palette Generator. — serie_palette","text":"function builds palettes based popular series anime Netflix others visualmedia. selection subjectively made authors.","code":""},{"path":"https://diognes.github.io/Rseries/reference/serie_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Series Palette Generator. — serie_palette","text":"","code":"serie_palette(   name,   palette_family = palette_netflyx,   n,   type = c(\"discrete\", \"continuous\") )"},{"path":"https://diognes.github.io/Rseries/reference/serie_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Series Palette Generator. — serie_palette","text":"name Name color palette. Current options Netflyx Anime. palette_family list palettes use. n Number colors used. palette includes 9 colors discrete palettes. n can chosen continuous palettes. type Usage palette \"continuous\" \"discrete\". Continuous palettes interpolate three first colors palette create gradient. specified, function assumes continuous n>9 discrete n<9.","code":""},{"path":"https://diognes.github.io/Rseries/reference/serie_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Series Palette Generator. — serie_palette","text":"vector n colors","code":""},{"path":"https://diognes.github.io/Rseries/reference/show_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"function to show all the avaliable palettes in a specific family . — show_pal","title":"function to show all the avaliable palettes in a specific family . — show_pal","text":"function show avaliable palettes specific family .","code":""},{"path":"https://diognes.github.io/Rseries/reference/show_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to show all the avaliable palettes in a specific family . — show_pal","text":"","code":"show_pal(   name = \"all\",   palette_family = palette_netflyx,   n = 6,   rev = TRUE,   ... )"},{"path":"https://diognes.github.io/Rseries/news/index.html","id":"rseries-001","dir":"Changelog","previous_headings":"","what":"Rseries 0.0.1","title":"Rseries 0.0.1","text":"First release package Added NEWS.md file track changes package. Added palettes based Netflyx series , Anime","code":""}]
